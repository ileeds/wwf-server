AWSTemplateFormatVersion: 2010-09-09
Resources:
  Application:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: AWS Elastic Beanstalk WWF Application
  ConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName:
        Ref: Application
      Description: AWS ElasticBeanstalk WWF Configuration Template
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:command
          OptionName: DeploymentPolicy
          Value: Rolling
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: 2
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: 6
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref InstanceProfile
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SPRING_PROFILES_ACTIVE
          Value: production
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: aws-eb
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: Port
          Value: 8080
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckPath
          Value: /actuator/health
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:elbv2:listener:80
          OptionName: Protocol
          Value: HTTP
        - Namespace: aws:elbv2:listener:443
          OptionName: Protocol
          Value: HTTPS
        - Namespace: aws:elbv2:listener:443
          OptionName: SSLCertificateArns
          Value: arn:aws:acm:us-east-1:895339510044:certificate/fe50f7eb-f8db-4f66-bd92-380390c4c502
      SolutionStackName: 64bit Amazon Linux 2 v3.4.4 running Corretto 17
  Environment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName:
        Ref: Application
      Description: AWS ElasticBeanstalk WWF Environment
      TemplateName:
        Ref: ConfigurationTemplate
  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: Beanstalk EC2 role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole
  CacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for WWF server cache.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          SourceSecurityGroupId: sg-0f48ef4c36e7ab01f
          Description: WWF EB server
      VpcId: vpc-4e51dd34
  Cache:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      AutoMinorVersionUpgrade: false
      CacheNodeType: cache.t2.micro
      NumCacheNodes: 1
      Engine: redis
      EngineVersion: 7.0
      VpcSecurityGroupIds:
        - !GetAtt CacheSecurityGroup.GroupId
  BrokerSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: BrokerSecret
      Description: WWF broker credentials.
      GenerateSecretString:
        SecretStringTemplate: '{"username": "wwf"}'
        GenerateStringKey: password
        PasswordLength: 30
        ExcludePunctuation: true
  BrokerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for WWF server broker.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 61614
          ToPort: 61614
          SourceSecurityGroupId: sg-0f48ef4c36e7ab01f
          Description: WWF EB server
      VpcId: vpc-4e51dd34
  Broker:
    Type: AWS::AmazonMQ::Broker
    DependsOn: BrokerSecret
    Properties:
      AutoMinorVersionUpgrade: false
      BrokerName: WwfActiveMqBroker
      DeploymentMode: SINGLE_INSTANCE
      EngineType: ACTIVEMQ
      EngineVersion: 5.17.2
      HostInstanceType: mq.t3.micro
      PubliclyAccessible: false
      SecurityGroups:
        - !GetAtt BrokerSecurityGroup.GroupId
      Users:
        - Password: '{{resolve:secretsmanager:BrokerSecret:SecretString:password}}'
          Username: '{{resolve:secretsmanager:BrokerSecret:SecretString:username}}'
  Dns:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: wormswithfriends.com.
      RecordSets:
        - Name: server.wormswithfriends.com.
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt Environment.EndpointURL
        - Name: cache.wormswithfriends.com.
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt Cache.RedisEndpoint.Address
        - Name: broker.wormswithfriends.com.
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !Select [ 0, !Split [ ":", !Select [ 1, !Split [ "//", !Select [ 0, !GetAtt Broker.StompEndpoints ] ] ] ] ]
